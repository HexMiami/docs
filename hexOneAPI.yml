openapi: 3.0.0
info:
  version: 0.1.0
  title: hexOneAPI
servers:
  - url: http://localhost:8080
paths:
  /auth/login:
    post:
      summary: "Authenticate to box"
      operationId: api.api.login
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /auth/logout:
    post:
      summary: "Deauthenticate to box"
      operationId: api.api.logout
      tags:
        - auth
      responses:
        "200":
          description: "logged out"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /auth/change_password:
    post:
      summary: "Change password to box"
      operationId: api.api.change_password
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /action:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Requests HexONE to perform an action. Returns a UUID that you can poll for status via GET /action/{id}"
      operationId: api.api.performAction
      tags:
        - action
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActionRequest"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionPostResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /action/clear_queue:
    put:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Requests HexONE to clear its action queue."
      operationId: api.api.clearActionQueue
      tags:
        - action
      responses:
        "200":
          description: "Queue got cleared"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /action/recent:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Gets statuses of recent commands."
      operationId: api.api.getRecentCommands
      tags:
        - action
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ActionGetResponse"
  /action/{id}:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get information about the action with id {id}"
      operationId: api.api.getActionStatus
      tags:
        - action
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: uuid.v4 of the action to get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionGetResponse"
  /telemetry:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Gets telemetry."
      operationId: api.api.getTelemetry
      tags:
        - status
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TelemetryResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /telemetry/battery_history:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get last 6 hours of battery history"
      operationId: api.api.getBatteryHistory
      tags:
        - status
        - batteries
      responses:
        "200":
          description: "battery history"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BatteryHistory"
  /telemetry/temperature_history:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get last 6 hours of temperature history"
      operationId: api.api.getTemperatureHistory
      tags:
        - status
        - temperature
      responses:
        "200":
          description: "temperature history"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TemperatureHistory"
  /telemetry/board_voltage_history:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get last 6 hours of temperature history"
      operationId: api.api.getBoardVoltageHistory
      tags:
        - status
        - board_voltage
      responses:
        "200":
          description: "board voltage history"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BoardVoltageHistory"
  /toggle/{thing}/{toggle}:
    put:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Toggle (enable or disable) power on battery port #id (1-6)"
      operationId: api.api.putThingToggle
      tags:
        - peripherals
      parameters:
        - in: path
          name: thing
          schema:
            type: string
            enum:
              - autoac
              - heater
              - cooler
              - remotecontrol
              - odroid
          required: true
          description: name of thing to toggle
        - in: path
          name: toggle
          schema:
            type: string
            enum: [enable, disable]
          required: true
          description: whether to enable or disable the power to the thing {thing}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callback_url:
                  type: string
                  format: url
                  description: callback url for when battery action is complete
                  example: http://example.com/ilikecorgis/
      responses:
        "200":
          description: "Request Info for toggling thing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionPostResponse"
  /advanced/offsets:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get current set of sku offsets"
      operationId: api.api.getSkuOffsets
      tags:
        - advanced
      responses:
        "200":
          description: "The current sku offsets"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsets"
    put:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Update sku offsets"
      operationId: api.api.putSkuOffsets
      tags:
        - advanced
      requestBody:
        required: true
        description: "The current sku offsets"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuOffsets"
      responses:
        "200":
          description: "The current sku offsets"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsets"
  /advanced/change_offset_config:
    post:
      summary: "Change Offset File"
      operationId: api.api.change_offset_config
      tags:
        - advanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OffsetConfigPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/schedule_battery_reinsert:
    get:
      summary: "returns the config for the atlas scheduled battery reinsert"
      operationId: api.api.getScheduledAtlasBatteryReinsert
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AtlasBatteryReinsertSchedulePayload"
    post:
      summary: "Change Atlas Battery Reinsert Schedule"
      operationId: api.api.scheduleAtlasBatteryReinsert
      tags:
        - advanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AtlasBatteryReinsertSchedulePayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/hex_relays_ip_address:
    get:
      summary: "Check current ip address assigned as hex_relays on local network"
      operationId: api.api.getHexRelaysIpAddress
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HexRelaysIpAddressPayLoad"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
    post:
      summary: "Update ip address assigned as hex_relays on local network"
      operationId: api.api.postHexRelaysIpAddress
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HexRelaysIpAddressPayLoad"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/offsets_atlas:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get current set of sku offsets for Atlas"
      operationId: api.api.getSkuOffsetsAtlas
      tags:
        - advanced
      responses:
        "200":
          description: "The current sku offsets of Atlas"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsetsAtlas"
    put:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Update sku offsets for Atlas"
      operationId: api.api.putSkuOffsetsAtlas
      tags:
        - advanced
      requestBody:
        required: true
        description: "The current sku offsets of Atlas"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuOffsetsAtlas"
      responses:
        "200":
          description: "The current sku offsets Atlas"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsetsAtlas"
  /advanced/positions_atlas:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get default set of sku positions for Atlas"
      operationId: api.api.getSkuPositionsAtlas
      tags:
        - advanced
      responses:
        "200":
          description: "The default sku positions of Atlas"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsetsAtlas"
  /advanced/motors_config_atlas:
    put:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Update motor configurations for Atlas"
      operationId: api.api.putMotorsConfigAtlas
      tags:
        - advanced
      requestBody:
        required: true
        description: "The current motor configurations of Atlas"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuOffsetsAtlas"
      responses:
        "200":
          description: "The current motor configurations Atlas"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsetsAtlas"
  /advanced/offsets_uni:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get current set of sku offsets"
      operationId: api.api.getSkuOffsetsUni
      tags:
        - advanced
      responses:
        "200":
          description: "The current sku offsets"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsetsUni"
    put:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Update sku offsets"
      operationId: api.api.putSkuOffsetsUni
      tags:
        - advanced
      requestBody:
        required: true
        description: "The current sku offsets"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuOffsetsUni"
      responses:
        "200":
          description: "The current sku offsets"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsetsUni"
  /advanced/positions_uni:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get default set of sku positions for Universal"
      operationId: api.api.getSkuPositionsUni
      tags:
        - advanced
      responses:
        "200":
          description: "The default sku positions of Universal"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuOffsetsUni"
  /advanced/descriptions_uni:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get current set of sku descriptions"
      operationId: api.api.getSkuDescriptionsUni
      tags:
        - advanced
      responses:
        "200":
          description: "The current sku descriptions"
          content:
            application/json:
              schema:
                type: object
  /advanced/error_history:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get latest errors for each command"
      operationId: api.api.getErrorHistory
      tags:
        - advanced
      responses:
        "200":
          description: "The latest errors for each command"
          content:
            application/json:
              schema:
                type: object
  /advanced/error_list:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get overall latest errors"
      operationId: api.api.getErrorList
      tags:
        - advanced
      responses:
        "200":
          description: "The overall latest errors"
          content:
            application/json:
              schema:
                type: object
  /advanced/warn_list:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get overall latest warnings"
      operationId: api.api.getWarnList
      tags:
        - advanced
      responses:
        "200":
          description: "The overall latest warnings"
          content:
            application/json:
              schema:
                type: object
  /advanced/firmware_versions:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get firmware versions array"
      operationId: api.api.getFirmwareVersions
      tags:
        - advanced
      responses:
        "200":
          description: "The firmware versions array that is updated on initialization"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: "Request update firmware versions list"
      operationId: api.api.updateFirmwareVersionsList
      tags:
        - advanced
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/batteries/enabled_slots:
    get:
      summary: "returns an array of booleans where a[i] is True if the ith battery is enabled (pickable by swapbattery)"
      operationId: api.api.getEnabledBatteries
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "returns array of booleans for battery enabled status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatterySlotsMask"
    post:
      summary: "update which batteries are enabled"
      operationId: api.api.postEnabledBatteries
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatterySlotsMask"
      responses:
        "200":
          description: "returns array of booleans for battery enabled status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatterySlotsMask"
  /advanced/batteries/enabled_slots_atlas:
    get:
      summary: "returns an array of booleans where a[i] is True if the ith battery is enabled (pickable by swapbattery)"
      operationId: api.api.getEnabledBatteriesAtlas
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "returns array of booleans for battery enabled status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatterySlotsMaskAtlas"
    post:
      summary: "update which batteries are enabled"
      operationId: api.api.postEnabledBatteriesAtlas
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatterySlotsMaskAtlas"
      responses:
        "200":
          description: "returns array of booleans for battery enabled status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatterySlotsMask"
  /advanced/batteries/enabled_placement_slots:
    get:
      summary: "returns an array of booleans where a[i] is True if the ith battery slot is full (occupied by a battery)"
      operationId: api.api.getPlacementBatteries
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "returns array of booleans for battery occupation status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatteryPlacementMask"
    post:
      summary: "update which battery slots are occupied"
      operationId: api.api.postPlacementBatteries
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatteryPlacementMask"
      responses:
        "200":
          description: "returns array of booleans for battery occupation status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatteryPlacementMask"
  /advanced/batteries/enabled_placement_slots_atlas:
    get:
      summary: "returns an array of booleans where a[i] is True if the ith battery slot is full (occupied by a battery)"
      operationId: api.api.getPlacementBatteriesAtlas
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "returns array of booleans for battery occupation status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatteryPlacementMaskAtlas"
    post:
      summary: "update which battery slots are occupied"
      operationId: api.api.postPlacementBatteriesAtlas
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatteryPlacementMaskAtlas"
      responses:
        "200":
          description: "returns array of booleans for battery occupation status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatteryPlacementMaskAtlas"
  /advanced/batteries/enabled_unit_config_atlas:
    get:
      summary: "returns an array of booleans that represents different unit configurations"
      operationId: api.api.getUnitConfigAtlas
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "returns array of booleans for unit configurations"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitConfigAtlas"
    post:
      summary: "update which unit configuration is activated"
      operationId: api.api.postUnitConfigAtlas
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnitConfigAtlas"
      responses:
        "200":
          description: "returns array of booleans for unit configuration status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitConfigAtlas"
  /advanced/batteries/enabled_unit_config_uni:
    get:
      summary: "returns an array of booleans that represents different unit configurations"
      operationId: api.api.getUnitConfigUni
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "returns array of booleans for unit configurations"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitConfigUni"
    post:
      summary: "update which unit configuration is activated"
      operationId: api.api.postUnitConfigUni
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnitConfigUni"
      responses:
        "200":
          description: "returns array of booleans for unit configuration status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitConfigUni"
  /advanced/batteries/enabled_unit_config_global:
    get:
      summary: "returns an array of booleans that represents different unit configurations"
      operationId: api.api.getUnitConfigGlobal
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "returns array of booleans for unit configurations"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitConfigGlobal"
    post:
      summary: "update which unit configuration is activated"
      operationId: api.api.postUnitConfigGlobal
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnitConfigGlobal"
      responses:
        "200":
          description: "returns array of booleans for unit configuration status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitConfigGlobal"
  /advanced/battery_memory:
    get:
      summary: "returns an array with one boolean where if true, remember the battery positions at boot (don't overwrite) and set has_discovered to true "
      operationId: api.api.getBatteryMemory
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "returns array of one boolean for battery memory status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatteryMemory"
    post:
      summary: "update battery memory status"
      operationId: api.api.postBatteryMemory
      tags:
        - advanced
      security:
        - bearerAuth: []
        - cookieBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatteryMemory"
      responses:
        "200":
          description: "returns array of one boolean for battery memory status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatteryMemory"
  /advanced/request_update_firmware:
    post:
      summary: "Request station firmware update"
      operationId: api.api.requestUpdateFirmware
      tags:
        - advanced
      responses:
        "200":
          description: "received the firmware update with version request"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirmwareVersionPayload"
  /advanced/request_update:
    post:
      summary: "Request box update"
      operationId: api.api.request_update
      tags:
        - advanced
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/battery_current_offsets:
    post:
      summary: "Adjust battery current offsets"
      operationId: api.api.battery_current_offsets
      tags:
        - advanced
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/battery_current_offsets_reset:
    post:
      summary: "Reset battery current offsets"
      operationId: api.api.battery_current_offsets_reset
      tags:
        - advanced
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/update_weather_api_key:
    post:
      summary: "Change weather api key in box"
      operationId: api.api.store_weather_apikey
      tags:
        - advanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeatherApiKeyPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/manual_serial:
    post:
      summary: "Add manual serial command"
      operationId: api.api.add_manual_serial_command
      tags:
        - advanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManualSerialCommandPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/update_compressor_pwm:
    post:
      summary: "Change compressor pwm"
      operationId: api.api.change_compressor_pwm
      tags:
        - advanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompressorPWMPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/update_temperature_thresholds:
    post:
      summary: "Change temperature thresholds"
      operationId: api.api.change_temperature_thresholds
      tags:
        - advanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemperatureThresholdsPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /advanced/weather_thresholds:
    get:
      summary: "Check current weather thresholds"
      operationId: api.api.getWeatherThresholds
      tags:
        - advanced
      responses:
        "200":
          description: "successfully got the weather threshold info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeatherThresholdStatus"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
    post:
      summary: "Change weather thresholds"
      operationId: api.api.postWeatherThresholds
      tags:
        - advanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeatherThresholdsPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

  /advanced/update_weatherflow_api:
    post:
      summary: "Update weatherflow api token"
      operationId: api.api.update_weatherflow_api
      tags:
        - advanced
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeatherFlowAPIPayload"
      responses:
        "200":
          description: ""
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /demo:
    get:
      summary: "returns whether the unit is in demo mode"
      operationId: api.api.getDemoStatus
      tags:
        - demo
      security:
        - bearerAuth: []
        - cookieBearer: []
      responses:
        "200":
          description: "whether the unit is in demo mode"
          content:
            application/json:
              schema:
                type: object
                required:
                  - demo_mode
                  - configuration
                properties:
                  demo_mode:
                    type: boolean
                    default: false
                    example: false
                  configuration:
                    $ref: "#/components/schemas/DemoConfig"
  /demo/enable:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Enable Demo Mode"
      operationId: api.api.postDemoEnable
      tags:
        - demo
      requestBody:
        required: true
        description: "demo mode configuration"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DemoConfig"
      responses:
        "200":
          description: "The current demo configuration offsets"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DemoConfig"
  /demo/disable:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Enable disable Mode"
      operationId: api.api.postDemoDisable
      tags:
        - demo
      responses:
        "200":
          description: "The current demo configuration offsets"
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    default: "ok"
                    example: "ok"
  /health:
    get:
      summary: "Returns a 200 if we are online"
      operationId: api.api.health
      tags:
        - status
      responses:
        "200":
          description: "HexONE is online."
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /version:
    get:
      summary: "Get HexONE Version"
      operationId: api.api.getHexOneVersion
      tags:
        - version
      responses:
        "200":
          description: "successfully tells the version"
          content:
            application/json:
              schema:
                type: object
                required:
                  - version
                properties:
                  version:
                    type: string
  /hexone_logs:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get HexONE API Logs"
      operationId: api.api.getHexOneLogs
      tags:
        - logs
      responses:
        "200":
          description: "logs text file"
          content:
            text/plain:
              schema:
                type: string
  /system_logs:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Returns /var/log/syslog from HexOS."
      operationId: api.api.getSystemLogs
      tags:
        - logs
      responses:
        "200":
          description: "syslog"
          content:
            text/plain:
              schema:
                type: string
  /advanced/update_hexcameras_immediate/{lights_on}:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send request to immediately update camera images"
      operationId: api.api.updateHexCameraImages
      tags:
        - advanced
      parameters:
        - name: lights_on
          in: path
          description: "Boolean to determine if we turn lights on before taking photos or not (default false)"
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: ""
          content:
            text/pain:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /check_hexcamera/{camera_number}:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get HexCamera Image"
      operationId: api.api.getHexCameraImage
      tags:
        - logs
      parameters:
        - name: camera_number
          in: path
          description: "Camera number"
          required: true
          schema:
            type: string
        - name: timestamp # New parameter for cache-busting
          in: query
          description: "Timestamp for cache-busting"
          schema:
            type: integer # You might need to adjust the type based on your server's requirements
      responses:
        "200":
          description: "Picture for the specified HexCamera"
          content:
            image/*:
              schema:
                type: string
                format: binary
  /battery_vision_picture:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Get Battery Vision Pictures"
      operationId: api.api.getBatteryVisionPic
      tags:
        - logs
      parameters:
        - name: timestamp
          in: query
          description: "Timestamp for cache-busting"
          schema:
            type: integer
      responses:
        "200":
          description: "battery vision picture file"
          content:
            image/*:
              schema:
                type: string
                format: binary
  /streaming/watch_stream_request:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send request to watch a webrtc stream"
      operationId: api.api.watchStreamRequest
      tags:
        - streaming
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: "Streaming api offer response for request to watch a webrtc stream"
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /streaming/send_ice_candidate:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send ICE candidates for webrtc streaming"
      operationId: api.api.sendIceCandidate
      tags:
        - streaming
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: "Streaming api response for successfully receiving ICE candidate"
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /streaming/send_ice_complete:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send ICE candidate transfer complete flag for webrtc streaming"
      operationId: api.api.sendIceComplete
      tags:
        - streaming
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: "Streaming api response for successfully receiving ICE candidate complete flag"
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /streaming/start_stream_request:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send request to start the webrtc stream"
      operationId: api.api.startStreamRequest
      tags:
        - streaming
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: "Streaming api response for successfully starting a webrtc stream"
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /streaming/stop_stream_request:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send request to stop a webrtc stream "
      operationId: api.api.stopStreamRequest
      tags:
        - streaming
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: "Streaming api response for successfully stopping a webrtc stream"
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /streaming/check_available_hexcameras:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send request to get available hexameras"
      operationId: api.api.checkAvailableHexcameras
      tags:
        - streaming
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /streaming/turn_server_info:
    get:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send request to get TURN server info"
      operationId: api.api.turnServerInfo
      tags:
        - streaming
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /streaming/heartbeat-ping:
    post:
      security:
        - bearerAuth: []
        - cookieBearer: []
      summary: "Send current time as a heartbeat ping to keep stream session open"
      operationId: api.api.streamHeartbeatPing
      tags:
        - streaming
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: "Streaming api response for successfully receiving heartbeat ping"
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: api.api.verify_token
    cookieBearer:
      type: apiKey
      name: token
      in: cookie
      x-apikeyInfoFunc: api.api.verify_apikey
  schemas:
    Command:
      type: string
      enum:
        [
          openbox,
          closebox,
          powerondrone,
          poweroffdrone,
          powerdronetoggle,
          powertoggleswap,
          remotecontroltoggle,
          rtktoggle,
          swapbattery,
          lightson,
          lightsoff,
          calibrate,
          updategps,
          updatenetwork,
          opengripper,
          closegripper,
          openleftgripper,
          openrightgripper,
          closeleftgripper,
          closerightgripper,
          zeroall,
          disablexyz,
          movex,
          movez,
          moved,
          movetest,
          slottest,
          latchtest,
          powermotortest,
          raisepad,
          lowerpad,
          midpad,
          openeverything,
          closeeverything,
          openlat,
          closelat,
          openlong,
          closelong,
          openfrontlong,
          openbacklong,
          closefrontlong,
          closebacklong,
          zerod,
          zerox,
          zeroy,
          zeroz,
          zeropad,
          zeropower,
          zerolatch,
          horizontallatch,
          verticallatch,
          locklatch,
          unlocklatch,
          moveroof,
          movepad,
          movepadleft,
          movepadright,
          movegantry,
          movey,
          movepower,
          swappart1,
          swappart2,
          extracommand1,
          extracommand2,
          extracommand3,
          extracommand4,
          extracommand5,
          extracommand6,
          swapbatteryleft,
          swapbatteryright,
          hotswapbattery,
          battslotreinsertion,
          telemetryupdate,
          fullreport,
          startup,
          batteryvision,
          batteryvisionimmediate,
          checkhexcameras,
          checkmotors,
          resetserial,
          abort,
        ]
    ActionRequest:
      type: object
      required:
        - command
      properties:
        command:
          $ref: "#/components/schemas/Command"
        callback_url:
          type: string
          description: "A URL to which you want action (command) status updates sent. Expect the ActionGetResponse type."
          format: url
      example:
        command: openbox
        callback_url: https://example.com/status
    ActionPostResponse:
      type: object
      required:
        - request_id
      properties:
        request_id:
          type: string
      example:
        request_id: "fc63c4f149604c54ad5349aa7779f9b8"
    ActionGetResponse:
      type: object
      required:
        - request_id
        - status
        - command
      properties:
        request_id:
          type: string
        status:
          type: string
          enum: [unknown, queued, inprogress, done, failed, cancelled]
        command:
          $ref: "#/components/schemas/Command"
    TelemetryResponse:
      type: object
      required:
        - status
        - battery_slot_status_123
        - battery_slot_status_456
        - battery_info
        - toggles
        - lights
        - climate
        - motors
        # Not required (used for Atlas)
        # - firmware_version
        # - motors_atlas
        # - motors_dc_atlas
        # - warn_message
        - error_message
        - time
      properties:
        status:
          type: object
          required:
            - station_type
            - operation
            - system
            - door
            # - enclosure
            - pad
            # - padatlas
            # - pad_buttons
            # - lat
            # - frontlong
            # - backlong
            # - latch
            # - gantry_switches
            - internal_temperature
            - internal_temperature_celcius
            - board_voltage
            - swaps_performed
            - auto_climate_state
            - heater_state
            - cooler_state
            - rc_state
            - odroid_state
            - lower_temp_threshold
            - upper_temp_threshold
            - pwm_compressor
            - location
            - network
            - gps_location
            - voltage_indicator
            - version
            - weather_temp
            - weather_wind
            - weather_wind_degree
            - weather_humidity
            - weather_pressure
            - weather_precipitation
            # Added on Atlas
            # - weather_data_source
            # - battery_info_atlas
            # - atlas_battery_swap_record
            # - serial
            # - station_version
            # - flight_software
            # - cycles_performed
          properties:
            station_type:
              type: string
            operation:
              type: boolean
            system:
              type: string
            door:
              type: string
              enum: [open, closed]
            enclosure:
              type: string
              enum: [open, closed]
            pad:
              type: string
              enum: [empty, occupied]
            padatlas:
              type: string
              enum: [lowered, raised, unknown]
            pad_buttons:
              type: string
              enum: [left, right, both, none, unavailable]
            gantry_switches:
              type: string
              enum: [left, right, both, none, unavailable]
            lat:
              type: string
              enum: [open, closed, unknown]
            frontlong:
              type: string
              enum: [open, closed, unknown]
            backlong:
              type: string
              enum: [open, closed, unknown]
            latch:
              type: string
              enum: [zeroed, vertical, unlocked, horizontal, locked, unknown]
            internal_temperature:
              type: number
            internal_temperature_celcius:
              type: number
            board_voltage:
              type: number
            swaps_performed:
              type: integer
            auto_climate_state:
              type: string
              enum: [auto, manual]
            heater_state:
              type: string
              enum: [enabled, disabled]
            cooler_state:
              type: string
              enum: [enabled, disabled]
            rc_state:
              type: string
              enum: [enabled, disabled]
            odroid_state:
              type: string
              enum: [enabled, disabled]
            lower_temp_threshold:
              type: number
            upper_temp_threshold:
              type: number
            pwm_compressor:
              type: string
            location:
              type: array
              items:
                type: number
              description: Coordinates [lat, lon]
            network:
              type: string
            voltage_indicator:
              type: string
            location_data:
              type: object
            station_uptime:
              type: number
            gps_location:
              type: string
            version:
              type: string
            weather_temp:
              type: number
            weather_wind:
              type: number
            weather_wind_degree:
              type: number
            weather_humidity:
              type: number
            weather_pressure:
              type: number
            weather_precipitation:
              type: number
            weather_data_source:
              type: string
            battery_info_atlas:
              type: string
            atlas_battery_swap_record:
              type: string
            serial:
              type: string
            station_version:
              type: string
            flight_software:
              type: string
            cycles_performed:
              type: object
              properties:
                swap_count:
                  type: integer
                drone_toggle_count:
                  type: integer
                pad_cycle_count:
                  type: integer
                roof_cycle_count:
                  type: integer
                lat_cycle_count:
                  type: integer
                long_cycle_count:
                  type: integer
            uni_type:
              type: string
        battery_slot_status_123:
          type: array
          items:
            $ref: "#/components/schemas/BatterySlotStatus123"
        battery_slot_status_456:
          type: array
          items:
            $ref: "#/components/schemas/BatterySlotStatus456"
        battery_info:
          type: object
          required:
            - batteries
            - current_battery
            - next_battery
          properties:
            batteries:
              type: array
              items:
                $ref: "#/components/schemas/BatteryStatus"
            current_battery:
              type: integer
            next_battery:
              type: integer
        toggles:
          type: array
          items:
            $ref: "#/components/schemas/BatteryStatus"
          description: "power status of toggles (odroid, rc, fans)"
        lights:
          type: array
          items:
            $ref: "#/components/schemas/LightStatus"
        climate:
          type: array
          items:
            $ref: "#/components/schemas/ClimateStatus"
        motors:
          type: array
          items:
            $ref: "#/components/schemas/MotorStatus"
        firmware_version:
          type: array
          items:
            $ref: "#/components/schemas/FirmwareVersion"
        motors_atlas:
          type: array
          items:
            $ref: "#/components/schemas/MotorStatusAtlas"
        motors_dc_atlas:
          type: array
          items:
            $ref: "#/components/schemas/MotorDcStatusAtlas"
        motors_bldc_atlas:
          type: array
          items:
            $ref: "#/components/schemas/MotorBldcStatusAtlas"
        warn_message:
          type: string
          example: "Drone is going to the bathroom"
        error_message:
          type: string
          example: "Drone is in the bathroom"
        time:
          type: number
    BatteryStatus:
      type: object
      required:
        - name
        - voltage
        - current
        - on_off
      properties:
        name:
          type: string
        voltage:
          type: number
        current:
          type: number
        on_off:
          type: string
          enum: [ON, OFF]
        # status:
        #   type: string
        #   enum: [healthy, warning, unusable, empty]
    BatteryHistory:
      type: object
      required:
        - name
        - points
      properties:
        name:
          type: string
        points:
          type: array
          items:
            type: object
            required:
              - voltage
              - current
              - on_off
              - time
            properties:
              voltage:
                type: number
              current:
                type: number
              on_off:
                type: string
                enum: [ON, OFF]
              time:
                type: number
                format: float64
    BatterySlotStatus123:
      type: object
      required:
        - name
        - slot_1
        - slot_2
        - slot_3
      properties:
        name:
          type: string
        slot_1:
          type: number
        slot_2:
          type: number
        slot_3:
          type: number
    BatterySlotStatus456:
      type: object
      required:
        - name
        - slot_4
        - slot_5
        - slot_6
      properties:
        name:
          type: string
        slot_4:
          type: number
        slot_5:
          type: number
        slot_6:
          type: number
    WeatherThresholdStatus:
      type: object
      properties:
        weather_api_warning:
          type: string
        current_values:
          type: object
          properties:
            precipitation:
              type: number
              description: precipitation in millimeters next hour
            wind_speed:
              type: number
              description: wind speed in meters per hour
            temperature:
              type: number
              description: temperature in celsius
        thresholds:
          type: object
          properties:
            enable_thresholds:
              type: boolean
            precipitation:
              type: number
              description: user-set precipitation threshold in millimeters next hour
            wind_speed:
              type: number
              description: user-set wind speed threshold in meters per hour
            temperature_upper:
              type: number
              description: user-set upper temperature threshold in celsius
            temperature_lower:
              type: number
              description: user-set lower temperature threshold in celsius

    TemperatureHistory:
      type: object
      required:
        - time
        - temperature
      properties:
        time:
          type: number
          description: seconds since Epoch
          example: 1000000000000.11
        temperature:
          type: number
          description: temperature in F
          example: 69
    BoardVoltageHistory:
      type: object
      required:
        - time
        - board_voltage
      properties:
        time:
          type: number
          description: seconds since Epoch
          example: 1000000000000.11
        board_voltage:
          type: number
          description: voltage in V
          example: 69
    LightStatus:
      type: object
      required:
        - port
        - name
        - status
        # - pwm_color
        # - pwm_power
      properties:
        port:
          type: string
        name:
          type: string
        status:
          type: string
        # pwm_color:
        #   type: number
        # pwm_power:
        #   type: number
    ClimateStatus:
      type: object
      required:
        - port
        - name
        - status
        - gates
      properties:
        port:
          type: string
        name:
          type: string
        status:
          type: string
        gates:
          type: array
          items:
            type: integer
    MotorStatus:
      type: object
      required:
        - port
        - name
        - status
        - position
        - encoder
        - power
      properties:
        port:
          type: string
        name:
          type: string
        status:
          type: string
        position:
          type: number
        encoder:
          type: number
        power:
          type: number
    FirmwareVersion:
      type: object
      required:
        - name
        - version
      properties:
        name:
          type: string
        version:
          type: string
    MotorStatusAtlas:
      type: object
      required:
        - name
        - current_position
        - zero_fail
        - time_of_last_op
        - hit_switch
        - last_switch
        - zero_error
        - zero_time
        - stalled
        - base_stall_threshold
        - last_stall_threshold
        - last_travel_dist
        - home_on_switch
        - idle_lock
        - speed
        - accel
        - microsteps
        - rms
        - zero_direction
        - drive_direction
        - sg_unlock
      properties:
        name:
          type: string
        current_position:
          type: number
        zero_fail:
          type: boolean
        time_of_last_op:
          type: number
        hit_switch:
          type: boolean
        last_switch:
          type: number
        zero_error:
          type: number
        zero_time:
          type: number
        stalled:
          type: boolean
        base_stall_threshold:
          type: number
        last_stall_threshold:
          type: number
        last_travel_dist:
          type: number
        home_on_switch:
          type: boolean
        idle_lock:
          type: boolean
        speed:
          type: number
        zero_speed:
          type: number
        accel:
          type: number
        microsteps:
          type: number
        rms:
          type: number
        zero_direction:
          type: number
        drive_direction:
          type: number
        sg_unlock:
          type: boolean
    MotorDcStatusAtlas:
      type: object
      required:
        - name
        - active
        - button
        - is_home
      properties:
        name:
          type: string
        active:
          type: boolean
        button:
          type: number
        is_home:
          type: boolean
    MotorBldcStatusAtlas:
      type: object
      required:
        - name
        - active
        - button
        - is_home
        - using_EXT_board
        - motion_time_set
        - elapsed_time
        - fg_signal_changed
        - stopped_with_fg
      properties:
        name:
          type: string
        active:
          type: boolean
        button:
          type: number
        is_home:
          type: boolean
        using_EXT_board:
          type: boolean
        motion_time_set:
          type: number
        elapsed_time:
          type: number
        fg_signal_changed:
          type: boolean
        stopped_with_fg:
          type: boolean
    LatestError:
      type: object
      required:
        - time
        - job_id
        - error
        - error_code
      properties:
        time:
          type: number
        job_id:
          type: string
        error:
          type: string
        error_code:
          type: string
    SkuOffsets:
      type: object
      required:
        - ButtonX
        - ButtonY
        - ButtonZ
        - ButtonZdown
        - ButtonZup
        - ButtonZlower
        - ZZTop
        - DroneX
        - DroneY
        - DroneYback
        - DroneYfront
        - DroneZ
        - DroneZup
        - DroneZdown
        - DroneZdrop
        - DroneZMed
        - BattX
        - BattY
        - BattYClose
        - BattYSense
        - BattYby
        - BattZ
        - BattZdown
      properties:
        ButtonX:
          type: integer
        ButtonY:
          type: integer
        ButtonZ:
          type: integer
        ButtonZdown:
          type: integer
        ButtonZup:
          type: integer
        ButtonZlower:
          type: integer
        ZZTop:
          type: integer
        DroneX:
          type: integer
        DroneY:
          type: integer
        DroneYback:
          type: integer
        DroneYfront:
          type: integer
        DroneZ:
          type: integer
        DroneZup:
          type: integer
        DroneZdown:
          type: integer
        DroneZdrop:
          type: integer
        DroneZMed:
          type: integer
        BattX:
          type: array
          items:
            type: integer
          minItems: 6
          maxItems: 6
        BattY:
          type: integer
        BattYClose:
          type: integer
        BattYSense:
          type: integer
        BattYby:
          type: integer
        BattZ:
          type: integer
        BattZdown:
          type: integer
    SkuOffsetsAtlas:
      type: object
      required:
        - RoofDist
        - RoofDutyCycle
        - PadOffset
        - PadOffsetLeft
        - PadOffsetRight
        - PadMicrosteps
        - PadRMS
        - PadSpeedAmount
        - PadZeroSpeedAmount
        - PadAccelAmount
        - PadSwapPosAmount
        - PadFull
        - PadExtra
        - PadTimeout
        - YMicrosteps
        - ExtensionMicrosteps
        - YRMS
        - ExtensionRMS
        - YExtensionAmount
        - YSpeedAmount
        - YZeroSpeedAmount
        - YSlowAmount
        - YTimeout
        - YStallCycle
        - YStallMax
        - YStall
        - YSGUnlock
        - YStallDelay
        - ShimOut
        - ShimIn
        - CarefulInDistAmount
        - CarefulOutDistAmount
        - CarefulDroneDistAmount
        - PowerExtend
        - PowerRetract
        - PowerStallCycle
        - PowerStallMax
        - PowerStall
        - PowerSGUnlock
        - PowerStallDelay
        - FullClose
        - FullOpen
        - DroneDistAmount
        - BodyDistAmount
        - ZMicrosteps
        - ZRMS
        - ZOffsetConstant
        - ZSpeedAmount
        - ZTimeout
        - GantryZeroAmount
        - LatchMicrosteps
        - LatchRMS
        - LatchSpeedAmount
        - LatchStallCycle
        - LatchStallMax
        - LatchStall
        - LatchSGUnlock
        - LatchStallDelay
        - LatchBattUnlockDeg
        - LatchBattLockDeg
        - LatchVerticalDeg
        - LatchHorizontalDeg
        - CenterMicrosteps
        - CenterSpeedAmount
        - CenterAccelAmount
        - LatDistAmount
        - LongDistAmount
        - FrontLongDistAmount
        - BackLongDistAmount
        - LatStall
        - LongStall
        - CenterRMS
        - LatStallCycle
        - LongStallCycle
        - LatStallMax
        - LongStallMax
        - LatSGUnlock
        - LongSGUnlock
        - LatStallDelay
        - LongStallDelay
        - SlotInsert
        - SlotDeposit
        - SlotRetrieve
        - SlotYBattBump
        - BattRow1
        - BattRow2
        - BattRow3
        - BattRow4
        - DronePower1
        - DronePower2
        - DronePower3
        - DronePower4
        - RoofMovement
        - PadMovement
        - GantryMovement
        - YMovement
        - SwapPosition1
        - MoveZPower
        - MoveZOut
        - MoveZReady
        - MoveZFinal
        - FinalYBattPush
        - FinalYBattLock
        - PadLower
        - ZStall
        - LatTbl
        - LongTbl
        - LatDistAmount2
        - CenterMicrosteps2
        - CenterAccelAmount2
        - CenterSpeedAmount2
        - CenterRMS2
        - Microsteps1
        - Microsteps2
        - AccelAmount1
        - AccelAmount2
        - SpeedAmount1
        - SpeedAmount2
        - ZeroSpeedAmount1
        - ZeroSpeedAmount2
        - StallOffset1
        - StallOffset2
        - StallOffset3
        - StallOffset4
        - StallOffset5
        - StallOffset6
        - StallOffset7
        - StallOffset8
        - StallOffset9
        - StallOffset10
        - StallOffset11
        - StallOffset12
        - Offset1
        - Offset2
        - Offset3
        - Offset4
        - Offset5
        - Offset6
        - Offset7
        - Offset8
        - Offset9
        - Offset10
        - Offset11
        - Offset12
      properties:
        RoofDist:
          type: integer
        RoofDutyCycle:
          type: integer
        PadOffset:
          type: integer
        PadOffsetLeft:
          type: integer
        PadOffsetRight:
          type: integer
        PadMicrosteps:
          type: integer
        PadRMS:
          type: integer
        PadSpeedAmount:
          type: integer
        PadZeroSpeedAmount:
          type: integer
        PadAccelAmount:
          type: integer
        PadSwapPosAmount:
          type: integer
        PadFull:
          type: integer
        PadExtra:
          type: integer
        PadTimeout:
          type: integer
        YMicrosteps:
          type: integer
        ExtensionMicrosteps:
          type: integer
        YRMS:
          type: integer
        ExtensionRMS:
          type: integer
        YExtensionAmount:
          type: integer
        YSpeedAmount:
          type: integer
        YZeroSpeedAmount:
          type: integer
        YSlowAmount:
          type: integer
        YTimeout:
          type: integer
        YStallCycle:
          type: integer
        YStallMax:
          type: integer
        YStall:
          type: integer
        YSGUnlock:
          type: integer
        YStallDelay:
          type: integer
        ShimOut:
          type: integer
        ShimIn:
          type: integer
        CarefulInDistAmount:
          type: integer
        CarefulOutDistAmount:
          type: integer
        CarefulDroneDistAmount:
          type: integer
        PowerExtend:
          type: integer
        PowerRetract:
          type: integer
        PowerStallCycle:
          type: integer
        PowerStallMax:
          type: integer
        PowerStall:
          type: integer
        PowerSGUnlock:
          type: integer
        PowerStallDelay:
          type: integer
        FullClose:
          type: integer
        FullOpen:
          type: integer
        DroneDistAmount:
          type: integer
        BodyDistAmount:
          type: integer
        ZMicrosteps:
          type: integer
        ZRMS:
          type: integer
        ZOffsetConstant:
          type: integer
        ZSpeedAmount:
          type: integer
        ZTimeout:
          type: integer
        GantryZeroAmount:
          type: integer
        LatchMicrosteps:
          type: integer
        LatchRMS:
          type: integer
        LatchSpeedAmount:
          type: integer
        LatchStallCycle:
          type: integer
        LatchStallMax:
          type: integer
        LatchStall:
          type: integer
        LatchSGUnlock:
          type: integer
        LatchStallDelay:
          type: integer
        LatchBattUnlockDeg:
          type: integer
        LatchBattLockDeg:
          type: integer
        LatchVerticalDeg:
          type: integer
        LatchHorizontalDeg:
          type: integer
        CenterMicrosteps:
          type: integer
        CenterSpeedAmount:
          type: integer
        CenterAccelAmount:
          type: integer
        LatDistAmount:
          type: integer
        LongDistAmount:
          type: integer
        FrontLongDistAmount:
          type: integer
        BackLongDistAmount:
          type: integer
        LatStall:
          type: integer
        LongStall:
          type: integer
        CenterRMS:
          type: integer
        LatStallCycle:
          type: integer
        LongStallCycle:
          type: integer
        LatStallMax:
          type: integer
        LongStallMax:
          type: integer
        LatSGUnlock:
          type: integer
        LongSGUnlock:
          type: integer
        LatStallDelay:
          type: integer
        LongStallDelay:
          type: integer
        SlotInsert:
          type: integer
        SlotDeposit:
          type: integer
        SlotRetrieve:
          type: integer
        SlotYBattBump:
          type: integer
        BattRow1:
          type: integer
        BattRow2:
          type: integer
        BattRow3:
          type: integer
        BattRow4:
          type: integer
        DronePower1:
          type: integer
        DronePower2:
          type: integer
        DronePower3:
          type: integer
        DronePower4:
          type: integer
        RoofMovement:
          type: integer
        PadMovement:
          type: integer
        GantryMovement:
          type: integer
        YMovement:
          type: integer
        SwapPosition1:
          type: integer
        MoveZPower:
          type: integer
        MoveZOut:
          type: integer
        MoveZReady:
          type: integer
        MoveZFinal:
          type: integer
        FinalYBattPush:
          type: integer
        FinalYBattLock:
          type: integer
        PadLower:
          type: integer
        ZStall:
          type: integer
        LatTbl:
          type: integer
        LongTbl:
          type: integer
        LatDistAmount2:
          type: integer
        CenterMicrosteps2:
          type: integer
        CenterAccelAmount2:
          type: integer
        CenterSpeedAmount2:
          type: integer
        CenterRMS2:
          type: integer
        Microsteps1:
          type: integer
        Microsteps2:
          type: integer
        AccelAmount1:
          type: integer
        AccelAmount2:
          type: integer
        SpeedAmount1:
          type: integer
        SpeedAmount2:
          type: integer
        ZeroSpeedAmount1:
          type: integer
        ZeroSpeedAmount2:
          type: integer
        StallOffset1:
          type: integer
        StallOffset2:
          type: integer
        StallOffset3:
          type: integer
        StallOffset4:
          type: integer
        StallOffset5:
          type: integer
        StallOffset6:
          type: integer
        StallOffset7:
          type: integer
        StallOffset8:
          type: integer
        StallOffset9:
          type: integer
        StallOffset10:
          type: integer
        StallOffset11:
          type: integer
        StallOffset12:
          type: integer
        Offset1:
          type: integer
        Offset2:
          type: integer
        Offset3:
          type: integer
        Offset4:
          type: integer
        Offset5:
          type: integer
        Offset6:
          type: integer
        Offset7:
          type: integer
        Offset8:
          type: integer
        Offset9:
          type: integer
        Offset10:
          type: integer
        Offset11:
          type: integer
        Offset12:
          type: integer
    SkuOffsetsUni:
      type: object
      required:
        - Position1
        - Position2
        - Position3
        - Position4
        - Position5
        - Position6
        - Position7
        - Position8
        - Position9
        - Position010
        - Position011
        - Position012
        - Position013
        - Position014
        - Position015
        - Position016
        - Position017
        - Position018
        - Position019
        - Position020
        - Position021
        - Position022
        - Position023
        - Position024
        - Position025
        - Position026
        - Position027
        - Position028
        - Position029
        - Position030
        - Position031
        - Position032
        - Position033
        - Position034
        - Position035
        - Position036
        - Position037
        - Position038
        - Battery1
        - Battery2
        - Battery3
        - Battery4
      properties:
        Position1:
          type: integer
        Position2:
          type: integer
        Position3:
          type: integer
        Position4:
          type: integer
        Position5:
          type: integer
        Position6:
          type: integer
        Position7:
          type: integer
        Position8:
          type: integer
        Position9:
          type: integer
        Position010:
          type: integer
        Position011:
          type: integer
        Position012:
          type: integer
        Position013:
          type: integer
        Position014:
          type: integer
        Position015:
          type: integer
        Position016:
          type: integer
        Position017:
          type: integer
        Position018:
          type: integer
        Position019:
          type: integer
        Position020:
          type: integer
        Position021:
          type: integer
        Position022:
          type: integer
        Position023:
          type: integer
        Position024:
          type: integer
        Position025:
          type: integer
        Position026:
          type: integer
        Position027:
          type: integer
        Position028:
          type: integer
        Position029:
          type: integer
        Position030:
          type: integer
        Position031:
          type: integer
        Position032:
          type: integer
        Position033:
          type: integer
        Position034:
          type: integer
        Position035:
          type: integer
        Position036:
          type: integer
        Position037:
          type: integer
        Position038:
          type: integer
        Battery1:
          type: integer
        Battery2:
          type: integer
        Battery3:
          type: integer
        Battery4:
          type: integer
    BatterySlotsMask:
      type: array
      items:
        type: boolean
      minItems: 6
      maxItems: 6
      example: [true, true, true, true, true, true]
    BatterySlotsMaskAtlas:
      type: array
      items:
        type: boolean
      minItems: 8
      maxItems: 8
      example: [true, true, true, true, true, true, true, true]
    BatteryPlacementMask:
      type: array
      items:
        type: boolean
      minItems: 6
      maxItems: 6
      example: [true, true, true, true, true, true]
    BatteryPlacementMaskAtlas:
      type: array
      items:
        type: boolean
      minItems: 8
      maxItems: 8
      example: [true, true, true, true, true, true, true, true]
    UnitConfigAtlas:
      type: array
      items:
        type: boolean
      minItems: 56
      maxItems: 56
      example: [true, true, true, true, true, true, true, true]
    UnitConfigUni:
      type: array
      items:
        type: boolean
      minItems: 24
      maxItems: 24
      example: [true, true, true, true, true, true, true, true]
    UnitConfigGlobal:
      type: array
      items:
        type: boolean
      minItems: 12
      maxItems: 12
      example: [true, true, true, true, true, true, true, true]
    BatteryMemory:
      type: array
      items:
        type: boolean
      minItems: 1
      maxItems: 1
      example: [true]
    AtlasBatteryReinsertSchedulePayload:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
          description: enable or disable the scheduled battery reinsert
        hour:
          type: string
          default: "00"
        minute:
          type: string
          default: "00"
        monday:
          type: boolean
          default: false
        tuesday:
          type: boolean
          default: false
        wednesday:
          type: boolean
          default: false
        thursday:
          type: boolean
          default: false
        friday:
          type: boolean
          default: false
        saturday:
          type: boolean
          default: false
        sunday:
          type: boolean
          default: false
    HexRelaysIpAddressPayLoad:
      type: object
      required:
        - ip_address
      properties:
        ip_address:
          type: string
    DemoConfig:
      type: object
      properties:
        openbox:
          type: boolean
          default: false
          example: false
          description: whether to open the box as part of the demo routine
        closebox:
          type: boolean
          default: false
          example: false
          description: whether to close the box as part of the demo routine
        powerondrone:
          type: boolean
          default: false
          example: false
          description: whether to power the drone on as part of the demo routine
        poweroffdrone:
          type: boolean
          default: false
          example: false
          description: whether to power the drone off as part of the demo routine
        swapbattery:
          type: boolean
          default: true
          example: true
          description: whether to swap the battery as part of the demo routine
        lowerpad:
          type: boolean
          default: false
          example: false
          description: whether to lower the pad as part of the demo atlas routine
        raisepad:
          type: boolean
          default: false
          example: false
          description: whether to raise the pad as part of the demo atlas routine
        closelat:
          type: boolean
          default: false
          example: false
          description: whether to close lat as part of the demo atlas routine
        closelong:
          type: boolean
          default: false
          example: false
          description: whether to close long as part of the demo atlas routine
        openlat:
          type: boolean
          default: false
          example: false
          description: whether to open lat as part of the demo atlas routine
        openlong:
          type: boolean
          default: false
          example: false
          description: whether to open long as part of the demo atlas routine
    PasswordPayload:
      type: object
      required:
        - password
      properties:
        password:
          type: string
    LoginResponse:
      type: object
      required:
        - access_token
        - token_type
      properties:
        access_token:
          type: string
        token_type:
          type: string
    ChangePasswordPayload:
      type: object
      required:
        - current_password
        - new_password
      properties:
        current_password:
          type: string
        new_password:
          type: string
    WeatherApiKeyPayload:
      type: object
      required:
        - apikey
      properties:
        apikey:
          type: string
    ManualSerialCommandPayload:
      type: object
      required:
        - serial_command
      properties:
        serial_command:
          type: string
    CompressorPWMPayload:
      type: object
      required:
        - pwm
      properties:
        pwm:
          type: string
    TemperatureThresholdsPayload:
      type: object
      required:
        - lower_temp_threshold
        - upper_temp_threshold
      properties:
        lower_temp_threshold:
          type: string
        upper_temp_threshold:
          type: string
    WeatherThresholdsPayload:
      type: object
      required:
        - enable_thresholds
        - precipitation
        - wind_speed
        - temperature_upper
        - temperature_lower
      properties:
        enable_thresholds:
          type: boolean
        precipitation:
          type: number
        wind_speed:
          type: number
        temperature_upper:
          type: number
        temperature_lower:
          type: number
    WeatherFlowAPIPayload:
      type: object
      required:
        - stationid
        - token
      properties:
        stationid:
          type: string
        token:
          type: string
    FirmwareVersionPayload:
      type: object
      properties:
        firmwareVersion:
          type: string
          description: "The firmware version to request the update for"
      required:
        - firmwareVersion
    OffsetConfigPayload:
      type: object
      required:
        - file
      properties:
        file:
          type: string
    ApiError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          format: int32
        message:
          type: string
      example:
        code: 500
        message: despacito
